#!/usr/bin/env python3

import requests

url = "http://localhost:8000/predict"


data = [
    {
        "data": {
            "Student Age": "3",
            "Sex": "2",
            "Graduated High-school Type": "2",
            "Scholarship Type": "3",
            "Additional Work": "1",
            "Regular Artistic/Sports Activity": "2",
            "Do you have a Partner": "2",
            "Total Salary": "1",
            "Transportation": "1",
            "Accommodation in Cyprus": "2",
            "Mothers Education": "1",
            "Fathers Education": "2",
            "Number of Siblings": "4",
            "Parental Status": "1",
            "Mothers Occupation": "2",
            "Fathers Occupation": "3",
            "Weekly Study Hours": "2",
            "Reading Frequency (Non-Scientific)": "2",
            "Reading Frequency (Scientific)": "3",
            "Attendance to Seminars": "1",
            "Impact on Success": "1",
            "Attendance to Classes": "1",
            "Preparation to Midterm 1": "1",
            "Preparation to Midterm 2": "1",
            "Taking Notes in Classes": "3",
            "Listening in Classes": "3",
            "Discussion Improves Success": "2",
            "Flip-Classroom": "3",
            "Cumulative GPA Last Semester": "4",
            "Expected GPA at Graduation": "3",
            "COURSE ID": "1",
            # "OUTPUT Grade": "3",
        },
    },
    {
        "data": {
            "Student Age": "1",
            "Sex": "1",
            "Graduated High-school Type": "1",
            "Scholarship Type": "4",
            "Additional Work": "2",
            "Regular Artistic/Sports Activity": "2",
            "Do you have a Partner": "2",
            "Total Salary": "1",
            "Transportation": "1",
            "Accommodation in Cyprus": "1",
            "Mothers Education": "3",
            "Fathers Education": "4",
            "Number of Siblings": "4",
            "Parental Status": "1",
            "Mothers Occupation": "2",
            "Fathers Occupation": "4",
            "Weekly Study Hours": "2",
            "Reading Frequency (Non-Scientific)": "2",
            "Reading Frequency (Scientific)": "2",
            "Attendance to Seminars": "1",
            "Impact on Success": "1",
            "Attendance to Classes": "1",
            "Preparation to Midterm 1": "1",
            "Preparation to Midterm 2": "1",
            "Taking Notes in Classes": "3",
            "Listening in Classes": "3",
            "Discussion Improves Success": "2",
            "Flip-Classroom": "1",
            "Cumulative GPA Last Semester": "4",
            "Expected GPA at Graduation": "3",
            "COURSE ID": "9",
            # "OUTPUT Grade": "1",
        },
    },
    {
        "data": {
            "Student Age": "1",
            "Sex": "2",
            "Graduated High-school Type": "2",
            "Scholarship Type": "4",
            "Additional Work": "2",
            "Regular Artistic/Sports Activity": "1",
            "Do you have a Partner": "1",
            "Total Salary": "1",
            "Transportation": "1",
            "Accommodation in Cyprus": "1",
            "Mothers Education": "4",
            "Fathers Education": "4",
            "Number of Siblings": "1",
            "Parental Status": "1",
            "Mothers Occupation": "3",
            "Fathers Occupation": "2",
            "Weekly Study Hours": "2",
            "Reading Frequency (Non-Scientific)": "2",
            "Reading Frequency (Scientific)": "2",
            "Attendance to Seminars": "1",
            "Impact on Success": "1",
            "Attendance to Classes": "1",
            "Preparation to Midterm 1": "1",
            "Preparation to Midterm 2": "2",
            "Taking Notes in Classes": "3",
            "Listening in Classes": "1",
            "Discussion Improves Success": "2",
            "Flip-Classroom": "3",
            "Cumulative GPA Last Semester": "5",
            "Expected GPA at Graduation": "3",
            "COURSE ID": "6",
            # "OUTPUT Grade": "6",
        },
    },
]
try:
    response = requests.post(url, json=data[0])
    if response.status_code == 200:
        print("Predicción recibida:", response.json())
    else:
        print(f"Error en la predicción: {response.status_code}", response.json())
except requests.exceptions.RequestException as e:
    print("Error al conectar con el servicio:", e)
